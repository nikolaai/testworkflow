# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore: 
      - "**.md"
      - ".github/**"
    tags-ignore: 
      - "**"
  pull_request:
    branches: [ "main" ]
    paths-ignore: 
      - "**.md"
      - ".github/**"
    tags-ignore:
      - "**"
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/nikolaai/toolbox:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # create a cache
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/cache
          key: ${{ runner.os }}-gradle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: create dir for artifacts
        run: mkdir -p artifacts

      - name: create dir for caching
        run: mkdir -p ~/.gradle/cache

      - name: Populate cache
        run: echo $(date) >> ~/.gradle/cache/testGradle1.gradle

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo test1 >> artifacts/test1.txt

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts/test1.txt



      # - name: Cache gradle
      #   uses: actions/cache/save@v3
      #   with:
      #     path: ~/.gradle/cache
      #     key: apk-cache-toolbox-${{ github.sha }}}

  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nikolaai/toolbox:latest 
    needs: build
    
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: artifacts

      - name: check artifacts
        run: cat artifacts/test1.txt

      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.gradle/cache
          # key: apk-cache-toolbox-${{ github.sha }}
          key: ${{ runner.os }}-cigla
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: check cache
        run: cat ~/.gradle/cache/testGradle1.gradle

      

      # # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
  
  # manual-trigger-publish:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     CONTINUE_JOBS: ${{ steps.manual-trigger.outputs.CONTINUE_JOBS }}
  #   steps:
  #     - name: manual-trigger
  #       id: manual-trigger
  #       uses: benhamiltonpro/manual-trigger@v1
  #       with:
  #         RUN_NAME: "manual-trigger-publish"


  publish:
    # add condition to only run if release is published
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
      - name: Publish Relase
        run: echo "Publishing Release"
